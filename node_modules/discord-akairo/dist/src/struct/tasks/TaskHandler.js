"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const AkairoError_js_1 = __importDefault(require("../../util/AkairoError.js"));
const AkairoHandler_js_1 = __importDefault(require("../AkairoHandler.js"));
const Task_js_1 = __importDefault(require("./Task.js"));
/**
 * Loads tasks.
 */
class TaskHandler extends AkairoHandler_js_1.default {
    /**
     * @param client - The Akairo client.
     * @param options - Options.
     */
    constructor(client, options) {
        const { directory, classToHandle = Task_js_1.default, extensions = [".js", ".ts"], automateCategories, loadFilter } = options ?? {};
        if (!(classToHandle.prototype instanceof Task_js_1.default || classToHandle === Task_js_1.default)) {
            throw new AkairoError_js_1.default("INVALID_CLASS_TO_HANDLE", classToHandle.name, Task_js_1.default.name);
        }
        super(client, {
            directory,
            classToHandle,
            extensions,
            automateCategories,
            loadFilter
        });
    }
    /**
     * Start all tasks.
     */
    startAll() {
        this.client.once("ready", () => {
            this.modules.forEach(module => {
                if (!(module instanceof Task_js_1.default))
                    return;
                if (module.runOnStart)
                    module.exec();
                if (module.delay) {
                    setInterval(() => {
                        module.exec();
                    }, Number(module.delay));
                }
            });
        });
    }
}
exports.default = TaskHandler;
//# sourceMappingURL=TaskHandler.js.map