import type Category from "../../util/Category.js";
import type AkairoClient from "../AkairoClient.js";
import AkairoModule, { AkairoModuleOptions } from "../AkairoModule.js";
import type TaskHandler from "./TaskHandler.js";
/**
 * Represents a task.
 */
export default abstract class Task extends AkairoModule {
    /**
     * The category of this task.
     */
    category: Category<string, Task>;
    /**
     * The Akairo client.
     */
    client: AkairoClient;
    /**
     * The time in milliseconds between each time the task is run.
     */
    delay?: number;
    /**
     * The filepath.
     */
    filepath: string;
    /**
     * The handler.
     */
    handler: TaskHandler;
    /**
     * Whether or not to run the task on start.
     */
    runOnStart: boolean;
    /**
     * @param id - Task ID.
     * @param options - Options for the task.
     */
    constructor(id: string, options?: TaskOptions);
    /**
     * Executes the task.
     * @param args - Arguments.
     */
    exec(...args: any[]): any;
}
export default interface Task extends AkairoModule {
    /**
     * Reloads the task.
     */
    reload(): Promise<Task>;
    /**
     * Removes the task.
     */
    remove(): Task;
    /**
     * Returns the ID.
     */
    toString(): string;
}
/**
 * Options to use for task execution behavior.
 */
export interface TaskOptions extends AkairoModuleOptions {
    /**
     * The amount of time between the task being executed.
     */
    delay?: number;
    /**
     * Whether or not the task runs on start.
     * @default false
     */
    runOnStart?: boolean;
}
//# sourceMappingURL=Task.d.ts.map